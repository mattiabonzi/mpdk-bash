# Copyright (C) 2022 Mattia Bonzi <mattia@mattiabonzi.it>
# 
# This file is part of Mpdk.
# 
# Mpdk is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Mpdk is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Mpdk.  If not, see <http://www.gnu.org/licenses/>.




# This file contain only functions that are not direcly exposed in the API, and are only used as utility functions

# shellcheck disable=2254
mpdk_confirmation() {
    question=${1:-"Are you sure? (y/n) : "}
    answerno=${2:-"Aborting..."}
    notaccepted=${3:-"Please answer yes or no."}
    yesanswer=${4:-"[Yy]*"}
    noanswer=${5:-"[Nn]*"}
    while true; do
        read -r -p "$question" yn
        case $yn in
            $yesanswer ) break;;
            $noanswer ) echo "$answerno"; exit 0;;
            * ) echo "$notaccepted";;
        esac
    done
}


mpdk_getmyplugins() {
    plugins=""
    while read -r line; do
        set "$line"
        plugins+=$1" "
    done < "$ASSET"/myplugin
    echo "$plugins"
}

mpdk_getpluginpath() {
    grep "^$1\s" "$ASSET/myplugin" | cut -d' ' -f2
}




mpdk_spinner() {
    tput civis
    pid=$1
    spin='⣾⣽⣻⢿⡿⣟⣯⣷'
    i=0
    while kill -0 "$pid" 2>/dev/null;do
        i=$(( (i+1) %8))
        printf "\r%s Working...\t" "${spin:$i:1}\n"
        sleep .1
    done
    tput cnorm
}

mpdk_isrunning() {
    [[ "$1" =~ .*"webserver".*"running".*"80/tcp".* ]] &&
    printf "true"
}

mpdk_requirerunning() {
    local msg="The instance \"$COMPOSE_PROJECT_NAME\" is not running, use mpdk run to start it"
    [ -z "$(mpdk_isrunning "$(mpdk_ps)")" ] && mpdk_error "$msg"
}

mpdk_isinstance() {
     [ -f "$IROOT/../mpdkinstance.env" ]  && echo true
}

mpdk_requireinstance() {
    #If the mpdkinstance.env file does not exist, quit 
    if [ -z "$IROOT" ];then
        printf "\nAn instance must be defined to run this command!\n"
        quit=true
    elif [ -z "$(mpdk_isinstance)" ];then
        printf "\nThe speficied path is not an MPDK instance (%s)\n" "$IROOT"
        quit=true
    fi
    [ -n "$quit" ] && mpdk_usage "$1" && exit 1
}

mpdk_isinit() {
     [ -f "$IROOT/.init" ] && echo true
}


mpdk_requireinit() {
    local msg="The instance \"$COMPOSE_PROJECT_NAME\" has not been initialized, use \"mpdk init\" to init i or \"mpdk run\" to init and start it"
    [ -z "$(mpdk_isinit)" ] && mpdk_error "$msg"
}

mpdk_usage() {
    msg=${1:-"\n"}
    printf "Usage: mpdk [global options...] <command> [options...] [arguments...]\nTry 'mpdk -h' for help %s\n\n" "$msg"
}

#Show extended help message
mpdk_extendedhelp() {
    open "https://github.com/mattiabonzi/mpdk"
}

mpdk_error() { 
    printf "\nError: %s\n" "$*" >&2
    export MPDK_ERROR=true
    echo "$MPDK_ROLLBACK"
    if [ -n "$MPDK_ROLLBACK" ] ; then
        mpdk_rollaback
    fi
   exit
}


mpdk_begin() {
     export MPDK_ROLLBACK="$1" 
}

mpdk_commit() {
    export MPDK_ROLLBACK=""
}

mpdk_rollaback() {
    $MPDK_ROLLBACK
    mpdk_commit
}