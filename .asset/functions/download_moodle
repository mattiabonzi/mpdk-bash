# Copyright (C) 2022 Mattia Bonzi <mattia@mattiabonzi.it>
# 
# This file is part of Mpdk.
# 
# Mpdk is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Mpdk is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Mpdk.  If not, see <http://www.gnu.org/licenses/>.


mpdk_parser_definition_download_moodle() {
	setup   OARGS help:usage abbr:true -- '' "Usage: mpdk download_moodle [Options...]"
	msg -- 'Download moodle core (use "mpdk new")'
	msg -- '' 'Options:'
	param VERSION  -v --version -- "Moodle version (x.x.x or x.x for latest stable)"
    flag NOCACHE -c --no-cache -- "Disable local cache"
    flag returnurl -u --returl-url -- "Return url instead of download (for testing)"
    flag returnversion -V --returl-version -- "Return version instead of download (for testing)"
	disp :usage  -h --help -- "Display this screen" 
}

mpdk_download_moodle() {
    #Parse local options
    eval "$(getoptions mpdk_parser_definition_download_moodle parse "$0")"
    parse "$@"
    
    if [ -z "$VERSION" ];then
        link="$( wget -q  -O - https://download.moodle.org/releases/latest/ | grep -o "https://download\.moodle\.org/download\.php/stable\d\+/moodle-[A-Za-z0-9\.-]\+\.zip" | head -1 | sed 's+stable+direct/stable+g')"
        VERSION=$(echo "https://download.moodle.org/download.php/direct/stable401/moodle-latest-401.zip" | grep -o "moodle-.*\.zip")
        VERSION=${VERSION:7:$((${#VERSION}-11))}
    else
        if [[ "${VERSION:0:1}" = 4 ]];then
            branch=$(echo "$VERSION" | cut -d '.' -f1,2 | tr '.' 0)
        else
            branch=$(echo "$VERSION" | cut -d '.' -f1,2 | tr -d '.')
        fi 
        if [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]];then
            if [ "${VERSION:4}" = 0 ];then 
                VERSION="${VERSION:0:3}"
            fi
            link="https://download.moodle.org/download.php/direct/stable${branch}/moodle-$VERSION.zip"
        elif [[ $VERSION =~ ^[0-9]+\.[0-9]+$ ]];then
            link="https://download.moodle.org/download.php/direct/stable${branch}/moodle-latest-${branch}.zip"
        elif [ ${VERSION:0:6} -eq "latest" ]; then
            branch=${VERSION:7}
            link="https://download.moodle.org/download.php/direct/stable${branch}/moodle-latest-${branch}.zip"
        else
            mpdk_error "Use syntax 'x.x' or 'x.x.x' to specify the version"
        fi
    fi
    msg="Unable to build a valid url, use syntax 'x.x' or 'x.x.x' to specify the version"
    [ -z "$link" ] && mpdk_error "$msg"
    [ -n "$returnurl" ] && echo "$link" && exit 0
    [ -n "$returnversion" ] && echo "$link $VERSION" && exit 0
    returnversion

    if [ -n "$NOCACHE" ];then
        wget --quiet "$link"
    else
        mpdk_call_wget "$link"
    fi
}

#Check the cache, if the reqeust version is already present, serve from cache otherwise download with wget
mpdk_call_wget() {
    #Get the url from the argument passed to wget
    url="$(echo "$@" | sed 's/.*\(https.*tgz\).*/\1/')"
    #Get the filename from the url
    filename="moodle.zip"
    #Get the hash of the url
    hash="$(basename $url)_$(echo $url | md5)"
    #Check the cache
    if [ -d "$ASSET"/cache/"$hash" ];then
        #Copy the file from the cache
        cp -r "$ASSET"/cache/"$hash"/"$filename" ./"$filename"
    else
        #Download the file using wget and the original argument
        wget --quiet -O "$filename" "$@"
        #Create the entry inside the cache dir
        mkdir "$ASSET"/cache/"$hash"/
        #Copy the archive in the cache
        cp -r ./"$filename" "$ASSET"/cache/"$hash"/"$filename"
    fi
}