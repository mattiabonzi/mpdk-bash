
#Create a new plugin using tool_pluginskel
mpdk_newplugin() {
    #Sanity check
    #Check if the container is running
    mpdk_requirerunning
    #Get the dialog ENV if present use "dialog" as fallback
    dialog=${DIALOG:-dialog}
    #Output redirection required for use "dialog"
    output="3>&1 1>&2 2>&3 3>&-"   

    #Show all the form
    type="$(eval "$dialog $PLUGIN_TYPE_DIALOG $output")";
    shortname="$(eval "$dialog $PLUGIN_COMPONENT_NAME_DIALOG $output")";
    name="$(eval "$dialog  $PLUGIN_DISPLAY_NAME_DIALOG $output")";
    features="$(eval "$dialog $PLUGIN_FEATURES_DIALOG $output")";
    privacy="$(eval "$dialog $PLUGIN_PRIVACY_DIALOG $output")";
    minversion="$(eval "$dialog $PLUGIN_REQUIRES_VERSION_DIALOG $output")";
    release="$(eval "$dialog $PLUGIN_RELEASE_DIALOG $output")";
    version="$(eval "$dialog $PLUGIN_VERSION_DIALOG $output")";
    maturity="$(eval "$dialog $PLUGIN_MATURITY_DIALOG $output")";
    editmanualy="$(eval "$dialog $PLUGIN_CREATE_DIALOG $output")";
    

    #Create "features" yaml part
    feautes_string="features:\n"
    recipename="$type"_"$shortname";
    for f in $features; do
        feautes_string+="    $f: true \n"
    done

    #Create main yaml part (indentation is relevant) 
    yaml="
#Generated by mpdk script for tool_pluginskel
copyright: '$COPYRIGHT_STRING'
component: '$recipename'
release: $release
version: $version
requires: '$minversion'
maturity: $maturity
name: '$name'\n""$feautes_string"

    #Create privacy yaml part
    if [ "$privacy" -eq 1 ]; then
        yaml+="privacy:\n    haspersonaldata: true\n"
    fi
    #If the user choose to continue editing the file manually, output it and exit
    if [ "$editmanualy" -eq 1 ]; then
        clear
        printf "\nCopy your recipe:"
        printf "\n\n$yaml\n\n"
        exit
    fi

    #Ask the user if to create also a git repo
    git="$(eval "$dialog $PLUGIN_GIT_DIALOG $output")";
    grunt="$(eval "$dialog $PLUGIN_GRUNT_DIALOG $output")";
    clear
    #Create the yaml file
    printf "$yaml" > "$ASSET"/recipe/"$recipename".yaml
    #Copy the file in the moodle dr, so it's visible inside the conatiner
    cp "$ASSET"/recipe/"$recipename".yaml "$IROOT"/"$recipename".yaml
    #Execute tool_pluginskel generate.php
    result="$(mpdk_sh php admin/tool/pluginskel/cli/generate.php --target-moodle=/var/www/html /var/www/html/"$recipename".yaml)"
    #Delete the file inside moodle, as we don't want to keep it here
    rm "$IROOT"/"$recipename".yaml
    #Get the new plugin directory
    relpath="$(echo "$result" | sed "s+.*\/var\/www\/html++g")"
  
    [ -z "$relpath" ] && printf "\nSomething went wrong" && exit
    [ "${relpath:${#relpath}-1:1}" != '/' ] && relpath+='/'
    [ "${relpath:0:1}" = '/' ] && relpath="${relpath:1:${#relpath}}"
    plugindir=$IROOT"$relpath"
    #Get the warning and error from tool_pluginskel (warning are like useful advice)
    result="$(echo "$result" | sed "s+\[.\{32\}\].tool_pluginskel\.[A-Z]*:.+\n+g" | cut -f 1 -d "[")"
    #Check if we have a directory, otherwise something went wrong
    if [ -z "$plugindir" ];then 
        printf '\nAn error as occurred! Please try again...'
        exit
    fi
    #Create the git repository if requested by the user 
    if [ $git -eq 1 ]; then
        cd "$plugindir" || ( printf "\nSomething went wrong..." && exit )
        wget --quiet -O "$plugindir"/.gitignore "https://www.toptal.com/developers/gitignore/api/phpunit,phpstorm+all,macos,windows,linux,eclipse,visualstudiocode,netbeans,python,node,grunt,sublimetext,phpcodesniffer,composer" & mpdk_spinner $!
        git init --quiet
        git add .
        #Make the first commit
        git commit --quiet -m "Initial commit, plugin just generated with mpdk and pluginskel (auto)" 
    fi
    #Add a gruntfile
    clear
    if [ $grunt -eq 1 ];then
        printf '{\n    "name": "moodle-'$recipename'",\n    "private": true}' > "$plugindir"/package.json
        mpdk_sh "cd $relpath && npm install --save-dev grunt grunt-contrib-less grunt-contrib-watch grunt-load-gruntfile 1>/dev/null" & mpdk_spinner $!
        #Adjust the reference to the global gruntfile
        gruntpath="$(echo $relpath | sed -r "s#[A-Za-z0-9-]+#\.\.#g")"Gruntfile.js
        cat "$ASSET"/gruntfile | sed "s+%relpath%+$gruntpath+g" > "$plugindir"/Gruntfile.js
    fi
    #Save the entry in myplugins file
    mpdk_addplugin "$recipename" "$relpath"
    #Print the warnign and error from tool_pluginskel to the user
    
    printf "\n\n$result\n";
    printf "\nYour plugin is ready inside: $plugindir, happy coding!\n"
}


height=15
width=60
listheight=16
yesno='1 Yes 0 No'

 PLUGIN_TYPE_DIALOG='--radiolist "Select plugin type (Space select, Enter confirm)" $height $width $listheight \
"mod" "Activity module" ON \
"tool" "Admin tool" OFF \
"gradingform" "Advanced grading method" OFF \
"antivirus" "Antivirus plugin" OFF \
"assignfeedback" "Assignment / Feedback plugin" OFF \
"assignsubmission" "Assignment / Submission plugin" OFF \
"assignment" "Assignment 2.2 (Disabled) / assignment" OFF \
"atto" "Atto HTML editor / Atto plugin" OFF \
"auth" "Authentication method" OFF \
"availability" "Availability restriction" OFF \
"block" "Block" OFF \
"booktool" "Book / Book tool" OFF \
"cachelock" "Cache lock handler" OFF \
"cachestore" "Cache store" OFF \
"calendartype" "Calendar type" OFF \
"contenttype" "contenttype" OFF \
"format" "Course format" OFF \
"coursereport" "Course report" OFF \
"customcertelement" "Custom certificate / customcertelement" OFF \
"customfield" "Custom field" OFF \
"dataformat" "Data format" OFF \
"datafield" "Database / Database field type" OFF \
"datapreset" "Database / Preset" OFF \
"fileconverter" "Document converter" OFF \
"editor" "Editor" OFF \
"enrol" "Enrolment method" OFF \
"ltiservice" "External tool / LTI service" OFF \
"ltisource" "External tool / LTI source" OFF \
"forumreport" "Forum / forumreport" OFF \
"grade" "Grade  method" OFF \
"gradeimport" "Grade import method" OFF \
"gradereport" "Gradebook report" OFF \
"h5plib" "H5P framework" OFF \
"local" "Local plugin" OFF \
"logstore" "Log store manager / Log store" OFF \
"mlbackend" "Machine learning backend" OFF \
"media" "Media player" OFF \
"metadatacontext" "Metadata / Data context plugin" OFF \
"metadatafieldtype" "Metadata / Data fieldtype plugin" OFF \
"mnetservice" "MNet service" OFF \
"message" "Notification plugin" OFF \
"plagiarism" "Plagiarism plugin" OFF \
"portfolio" "Portfolio" OFF \
"profilefield" "Profile field type" OFF \
"qbehaviour" "Question behaviour" OFF \
"qformat" "Question import/ format" OFF \
"qtype" "Question type" OFF \
"quizaccess" "Quiz / Access rule" OFF \
"quiz" "Quiz / Report" OFF \
"repository" "Repository" OFF \
"scormreport" "SCORM package / Report" OFF \
"search" "Search engine" OFF \
"report" "Site report" OFF \
"filter" "Text filter" OFF \
"theme" "Theme" OFF \
"tinymce" "TinyMCE HTML editor / Plugin" OFF \
"webservice" "Webservice protocol" OFF \
"workshopeval" "Workshop / Grading evaluation method" OFF \
"workshopform" "Workshop / Grading strategy" OFF \
"workshopallocation" "Workshop / Submissions allocation method" OFF \
'

 PLUGIN_COMPONENT_NAME_DIALOG='--inputbox "Component name" $height $width'
 PLUGIN_DISPLAY_NAME_DIALOG='--inputbox "Display name" $height $width'


 PLUGIN_FEATURES_DIALOG='--checklist "Select features (Space select, Enter confirm)" $height $width $listheight  \
"install" "db/install.php" ON \
"uninstall" "db/uninstall.php" OFF \
"settings" "settings.php" ON \
"readme" "README.md" ON \
"license" "LICENSE.md" OFF \
"upgrade" "db/upgrade.php" OFF \
"upgradelib" "db/upgradelib.php" OFF \
'


PLUGIN_PRIVACY_DIALOG='--menu "Does your plugin store personal user data?" $height $width $listheight $yesno'

 PLUGIN_REQUIRES_VERSION_DIALOG='--radiolist "Select a minimium required moodle verion (Space select, Enter confirm)" $height $width $listheight \
"2021051700" "3.11" ON \
"2020110900" "3.10" OFF \
"2020061500" "3.9" OFF \
"2019111800" "3.8" OFF \
"2019052000" "3.7" OFF \
"2018120300" "3.6" OFF \
"2018051700" "3.5" OFF \
"2017111300" "3.4" OFF \
"2017051500" "3.3" OFF \
"2016120500" "3.2" OFF \
"2016052300" "3.1" OFF \
"2015111600" "3.0" OFF \
"2015051100" "2.9" OFF \
"2014111000" "2.8" OFF \
"2014051200" "2.7" OFF \
"2013111800" "2.6" OFF \
"2013051400" "2.5" OFF \
"2012120300" "2.4" OFF \
"2012062500" "2.3" OFF \
"2011120500" "2.2" OFF \
'

 PLUGIN_RELEASE_DIALOG='--inputbox "Plugin release" $height $width 0.1.0'
 PLUGIN_VERSION_DIALOG='--inputbox "Plugin version" $height $width '"$(date +'%Y%m%d')"00


 PLUGIN_MATURITY_DIALOG='--checklist "Select maturiy level (Space select, Enter confirm)" $height $width $listheight  \
"MATURITY_ALPHA" "MATURITY_ALPHA" ON \
"MATURITY_BETA" "MATURITY_BETA" OFF \
"MATURITY_RC" "MATURITY_RC" OFF \
"MATURITY_STABLE" "MATURITY_STABLE" OFF \
'

PLUGIN_CLI_DIALOG='--inputmenu "Add cli script? (edit the name to add)" $height $width $listheight 1 "" 2 "" 3 "" 4 "" 5 "" '

PLUGIN_CREATE_DIALOG='--menu "How do you want to continue?" $height $width $listheight  2 "Create the plugin now" 1 "Edit the recipe manualy"'
PLUGIN_GIT_DIALOG='--menu "Initialize a GIT repository?" $height $width $listheight $yesno'
PLUGIN_GRUNT_DIALOG='--menu "Initialize GRUNT for this plugin?" $height $width $listheight $yesno'

