# Copyright (C) 2022 Mattia Bonzi <mattia@mattiabonzi.it>
# 
# This file is part of Mpdk.
# 
# Mpdk is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Mpdk is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Mpdk.  If not, see <http://www.gnu.org/licenses/>.


mpdk_parser_definition_new() {
	setup   OARGS help:usage abbr:true -- '' "Usage: mpdk new [Options...] <name>"
	msg -- 'Create '
	msg -- '' 'Options:'
	param VERSION  -v --version -- "Moodle version to install"
	flag NOCACHE -c --no-cache -- "Disable local cache"
    disp :usage  -h --help -- "Display this screen" 
    msg -- '' 'Arguments:'
    msg label:'<names>' -- "name for the new instance (use a self-exlplaining name)"
}

#Create a new instance, download moodle codebase
mpdk_new() {
    eval "$(getoptions mpdk_parser_definition_new parse "$0")"
    parse "$@"
    eval "set -- $OARGS";shift
    name=$1
    #Check version
    if [ -z "$MOODLE_DOCKER_PHP_VERSION" ]; then
        if [ -n "$VERSION" ];then 
            case  "1" in
                "$([  "$VERSION" = "`echo -e "$VERSION\n4.1" | sort -V | sed -n '2p'`" ] && echo 1)" ) MOODLE_DOCKER_PHP_VERSION=8.1;;
                "$([  "$VERSION" = "`echo -e "$VERSION\n3.11.8" | sort -V | sed -n '2p'`" ] && echo 1)" ) MOODLE_DOCKER_PHP_VERSION=8;;
                "$([  "$VERSION" = "`echo -e "$VERSION\n3.8.3" | sort -V | sed -n '2p'`" ] && echo 1)" ) MOODLE_DOCKER_PHP_VERSION=7.4;;
                "$([  "$VERSION" = "`echo -e "$VERSION\n3.6.4" | sort -V | sed -n '2p'`" ] && echo 1)" ) MOODLE_DOCKER_PHP_VERSION=7.3;;
                "$([  "$VERSION" = "`echo -e "$VERSION\n3.4" | sort -V | sed -n '2p'`" ] && echo 1)" ) MOODLE_DOCKER_PHP_VERSION=7.2;;
                * ) mpdk_error "Version not supported or malformed, min version is 3.4 and syntax is x or x.x or x.x.x";
                esac
        else
            MOODLE_DOCKER_PHP_VERSION=$MPDK_DEFAULT_PHP_VERSION;
        fi
        export MOODLE_DOCKER_PHP_VERSION;
    fi
    #Sanity check
    [ -z "$name" ] && mpdk_error "A name is reuiqred for the new instance!" 
    [ -d "$MPDK_ROOT"/instances/"$name" ] && mpdk_error 'Instance already exist'
    [ -n "$VERSION" ] && VERSION="-v $VERSION"
    [ -n "$NOCACHE" ] && NOCACHE="-c"
    IROOT="$MPDK_ROOT"/instances/"$name"
    #Create dir and change pwd
    mkdir "$IROOT" || (mpdk_error 'Cannot create the instance folder...')
    #Save rollback commnad as env (used in case of error)
    export MPDK_ROLLBACK="rm -rf $IROOT"
    cd "$IROOT/" || (mpdk_error 'Cannot create the instance folder...')
    #Create log folder
    mkdir "$IROOT/log" "$IROOT/moodle"
    #Get the moodle version
    set $(mpdk_download_moodle -V $NOCACHE $VERSION)
    MOODLE_LINK=$1
    MOODLE_VERSION=$2
    #Save all the config
    mpdkinstance="$(cat <<EOF
MOODLE_DOCKER_VERSION=$MOODLE_VERSION
MOODLE_DOCKER_LINK=$MOODLE_LINK
MOODLE_DOCKER_WWWROOT=$IROOT/moodle
IROOT=$IROOT
COMPOSE_PROJECT_NAME=$name
MOODLE_DOCKER_PHP_VERSION=$MOODLE_DOCKER_PHP_VERSION
MOODLE_DOCKER_DB=$MOODLE_DOCKER_DB
EOF
)"
    printf '%s' "$mpdkinstance" > "$IROOT/mpdkinstance.env"
    #Ready
    [ -n "$MPDK_DEBUG" ] && name="$name -x"
    mpdk_commit "Instance ready, located in '$IROOT/' use: 'mpdk --name $name run' to run it"
}